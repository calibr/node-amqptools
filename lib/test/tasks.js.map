{"version":3,"file":"tasks.js","sourceRoot":"","sources":["../../src/test/tasks.ts"],"names":[],"mappings":";AAEA,oCAAmD;AACnD,iCAAiC;AAEjC,IAAI,WAAW,GAAG,mBAAS,CAAC,KAAK,CAAC;AAElC,mBAAS,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;AAE/C,QAAQ,CAAC,OAAO,EAAE;IAChB,MAAM,CAAC,CAAC,IAAI;QACV,WAAW,CAAC,OAAO,GAAG,UAAU,CAAC;QACjC,WAAW,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,CAAC,IAAI;QAC5C,IAAI,OAAO,GAAG,WAAW,CAAC,UAAU,CAAC,UAAU,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,EAAC,KAAK,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC;QACpF,OAAO,CAAC,KAAK,CAAC;YACZ,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC5B,WAAW,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,QAAQ;gBACjD,QAAQ,EAAE,CAAC;gBACX,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;gBACtC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBACjC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACjC,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAC","sourcesContent":["/// <reference path=\"../../typings/tsd.d.ts\" />\n\nimport { amqpManager as amqpTools } from \"../index\"\nimport should = require(\"should\")\nimport bluebird = require(\"bluebird\")\nvar taskManager = amqpTools.tasks;\n\namqpTools.setConnectionURI(\"amqp://localhost\");\n\ndescribe(\"Tasks\", () => {\n  before((done) => {\n    taskManager.service = \"amqpTest\";\n    taskManager.purgeQueue('testTask', done);\n  });\n\n  it(\"should produce task and consume it\", (done) => {\n    var newTask = taskManager.createTask('testTask', {title: \"test\", data: {value: 1}});\n    newTask.start(() => {\n      should.exists(newTask.uuid);\n      taskManager.processTask('testTask', (task, doneTask) => {\n        doneTask();\n        should.equal(task.uuid, newTask.uuid);\n        should.equal(task.title, \"test\");\n        should.equal(task.data.value, 1);\n        done();\n      });\n    })\n  })\n});"]}