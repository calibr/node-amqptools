{"version":3,"file":"event.js","sourceRoot":"","sources":["../../src/test/event.ts"],"names":[],"mappings":"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","sourcesContent":["import { amqpManager as amqpTools } from \"../index\"\nimport {EventListener} from \"../EventListener\"\nimport * as sinon from \"sinon\"\n\nrequire(\"should\");\n\namqpTools.setConnectionURI(\"amqp://localhost\");\n\ndescribe(\"Events\", function() {\n  beforeEach(function(done) {\n    amqpTools.reconnect(function() {\n      done();\n    });\n  });\n\n  it(\"listener to all events should catch event\", function(done) {\n    var listener = amqpTools.createEventListener({});\n    listener.listen((message) => {\n      done();\n    }).then(() => {\n      var event = amqpTools.createEvent({exchange: 'note', topic: 'update'});\n      event.send({test: 'test'});\n    })\n  });\n\n  it(\"listener to userId event should catch event with userId\", function (done) {\n    var listener = amqpTools.createEventListener({userId: 'testUser'});\n    listener.listen((message) => {\n      done();\n    }).then(() => {\n      var event = amqpTools.createEvent({exchange: 'note', topic: 'update', userId: 'testUser'});\n      event.send({test: 'test'});\n    })\n  });\n\n  it(\"listener to userId event shouldn't catch event without userId\", function (done) {\n    var listener = amqpTools.createEventListener({userId: 'testUser'});\n    listener.listen((message) => {\n      done('Error wrong listener');\n    }).then(() => {\n      var event = amqpTools.createEvent({exchange: 'note', topic: 'update'});\n      event.send({test: 'test'});\n    });\n\n    setTimeout(done, 500);\n  });\n\n  it(\"listener to userId event shouldn't catch event with other userId\", function (done) {\n    var listener = amqpTools.createEventListener({userId: 'testUser'});\n    listener.listen((message) => {\n      done('Error wrong listener');\n    }).then(() => {\n      var event = amqpTools.createEvent({exchange: 'note', topic: 'update', userId: 'anotherUser'});\n      event.send({test: 'test'});\n    });\n\n    setTimeout(done, 500);\n  });\n\n  describe(\"Listen persistently\", () => {\n    var eventListenerListenStub;\n    var eventListener;\n    before(() => {\n      eventListenerListenStub = sinon.stub(EventListener.prototype, \"listen\", function() {\n        eventListener = this;\n        return Promise.resolve();\n      });\n    });\n    after(() => {\n      eventListenerListenStub.restore();\n    });\n\n    it(\"should set a persistent listener\", (done) => {\n      var events = new amqpTools.events(\"app-client\");\n      return events.on({\n        event: \"event-name\",\n        persistent: true\n      }, () => {\n      }, () => {\n        eventListenerListenStub.calledOnce.should.equal(true);\n        eventListener.persistent.should.equal(true);\n        eventListener.queueOptions.durable.should.equal(true);\n        eventListener.queueOptions.autoDelete.should.equal(false);\n        done();\n      });\n    });\n\n    it(\"by default listener should be not persistent\", (done) => {\n      eventListenerListenStub.reset();\n      eventListener = null;\n      var events = new amqpTools.events(\"app-client\");\n      return events.on(\"event-name\", () => {\n      }, () => {\n        eventListenerListenStub.calledOnce.should.equal(true);\n        eventListener.persistent.should.equal(false);\n        done();\n      });\n    });\n  });\n\n  describe(\"Manually acked events\", () => {\n    var eventListenerListenStub;\n    var eventListenerAckStub;\n    var eventListener;\n    var events;\n    var listenerFunc = sinon.spy(() => {});\n    var amqpMessage = {\n      content: JSON.stringify(\"hello world\")\n    };\n    before(() => {\n      events = new amqpTools.events(\"app-client\");\n      eventListenerListenStub = sinon.stub(EventListener.prototype, \"listen\", function() {\n        eventListener = this;\n        eventListener.listener = listenerFunc;\n        return Promise.resolve();\n      });\n      eventListenerAckStub = sinon.stub(EventListener.prototype, \"ack\", function() {\n      });\n    });\n    after(() => {\n      eventListenerListenStub.restore();\n      eventListenerAckStub.restore();\n    });\n\n    it(\"should set a manually-acked listener\", (done) => {\n      return events.on({\n        event: \"event-name\",\n        autoAck: false\n      }, listenerFunc, () => {\n        eventListenerListenStub.calledOnce.should.equal(true);\n        eventListener.autoAck.should.equal(false);\n        done();\n      });\n    });\n\n    it(\"should trigger listener with an ack function\", () => {\n      eventListener.onMessageReceived(amqpMessage);\n      listenerFunc.calledOnce.should.equal(true);\n      eventListenerAckStub.called.should.equal(false);\n      listenerFunc.args[0][0].should.equal(\"hello world\");\n      var extra = listenerFunc.args[0][1];\n      extra.ack();\n      eventListenerAckStub.calledOnce.should.equal(true);\n    });\n  });\n});"]}